История изменений:
==================
[+] добавлено
[-] удалено
[*] изменено
[!] исправлено
[/] пояснение
[=] совместимость
==================

2016-06-18, v.3.2.2.0
―――――――
[+] Поддержка дополнительных словарей.

2016-06-16, v.3.2.1.0
―――――――
[+] Поддержка перехода на следующее ошибочное слово.

2016-06-15, v.3.2.0.1
―――――――
[!] Исключено использование LuaFAR context.

2016-06-15, v.3.2.0.0
―――――――
[=] Совместимость с FAR 3 build 4575.
[+] Поддержка пользовательских словарей.

2014-05-03, v.3.1.6.2
―――――――
[!] Обработка нелатинских букв в пути к словарям.

2014-03-31, v.3.1.6.1
―――――――
[/] Добавление описания действий и клавиш в Install.rus .

2014-01-10, v.3.1.6.0
―――――――
[=] Совместимость с FAR 3 build 4190.

2014-07-11, v.3.1.5.0
―――――――
[*] Отложенная загрузка библиотеки hunspell.

2014-07-03, v.3.1.4.1
―――――――
[/] Актуализация Install.rus (John Doe).
[!] Некорректная конфигурация по умолчанию.
[!] Вывод ошибки об отсутствии hunspell в цвете предупреждения (John Doe).

2014-05-11, v.3.1.4.0
―――――――
[+] Метод match: позволяет проверить слово в контексте текущей строки
    (см. TexMatch в примере scripts\LuaSpell\LuaSpell.cfg.tex.example).
    Аргументы: слово, строка, позиция слова в строке, номер строки.
[+] Необязательность color: при отсутствии поля раскраска не выполняется.
    Это позволяет создавать словари для исключения проверки в других словарях.
[*] Исключение очистки слова: логика должна быть реализована в методе match
    (см. DicMatch в примере scripts\LuaSpell\LuaSpell.cfg.grk.example).
[*] Исключение проверки на многосимвольность слова: логика должна быть
    реализована в поле find для отбора по регэкспу (см. примеры).
[*] Необязательность значений в MacroKeys: в случае отсутствия
    какой‑либо макро‑клавиши соответствующий макрос не добавляется.

2014-05-09, v.3.1.3.0
―――――――
[+] Поддержка пользовательских словарей:
    — Тип словаря задаётся параметром Type: "Hunspell" или "Custom".
    — В пользовательском словаре должен быть конструктор словаря —
      метод new, которому в качестве аргумента передаётся таблица словаря.
      Метод должен возвращать handle — таблицу с методами, реализующими
      функционал, аналогичный hunspell‑словарю (см. modules\hunspell.lua
      и пример конфигурации scripts\LuaSpell\LuaSpell.cfg.tex.example).
    — Метод spell может использовать информацию о текущем редакторе,
      которая запоминается в поле Info таблицы словаря.
    — Сейчас обязательными для handle являются методы spell и free.
[+] Проверка по маске:
    — Если задано поле masks, выполняется проверка соответствия
      названия файла (без пути) маскам, перечисленным в таблице
      (см. пример конфигурации scripts\LuaSpell\LuaSpell.cfg.tex.example).
    — Логика работы с масками файлов взята из LuaFAR context.
[+] Поле filename (название файла): используется для формирования
    названия файла словаря и файла аффиксов со стандартными расширениями.
[+] Поле BreakOnMatch: true означает, что если слово удовлетворяет find,
    то spell‑процесс прерывается (т.е. последующие словари игнорируются).
[*] Необязательность find: при отсутствии поля проверка на find пропускается.

2014-05-07, v.3.1.2.0
―――――――
[+] Реализовано хранение конфигурации в отдельном файле LuaSpell.cfg .

2014-05-05, v.3.1.1.0
―――――――
[/] Обновление библиотек hunspell (спасибо capr и zg).
[*] Отключение загрузки макроса в случае ошибок при загрузке hunspell.
[!] Назначение собственных GUID для подсветки и списка слов.

2014-05-03, v.3.1.0.0
―――――――
[*] Замена библиотеки NHunspell на hunspell из проекта luapower.
    Внимание: все файлы словарей должны быть перекодированы в UTF‑8 без BOM,
    в первой строке aff‑файлов нужно прописать "SET UTF-8" (без кавычек).

2014-05-03, v.3.0.1.1
―――――――
[*] Добавление описаний к используемым событиям (спасибо Shmuel`у).

2014-05-02, v.3.0.1.0
―――――――
[/] Первая опубликованная версия.
[*] По умолчанию одновременно используется три словаря:
    русский (с буквой ё), английский и греческий.
[*] При проверке игнорируется комбинированный символ ударения.
    Дополнительные символы и условия можно прописать в ClearWord.
[-] Однобуквенные слова не проверяются (см. строки с WARN).
[-] Ограничен набор букв в составе проверяемых слов.
    Поменять набор можно, изменив локальную переменную CharSet.
[*] Изменены комбинации клавиш: CtrlF12 и CtrlShiftF12.
    Не забудьте поменять на собственные комбинации.

―――――――
