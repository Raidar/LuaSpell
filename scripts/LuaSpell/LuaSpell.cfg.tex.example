--------------------------------------------------------------------------------

---------------------------------------- TeX dictionary class
local TTexDic = {
  --Guid       = win.Uuid(""),
}
local MTexDic = { __index = TTexDic }

function TTexDic:spell (s)
  return true
end ---- spell

function TTexDic:free ()
  --return
end ---- spell

local function newTexDic (dic)
  
  local self = {
    dic = dic,
    --handle = h,
  } --- self

  return setmetatable(self, MTexDic)
end -- newTexDic

---------------------------------------- Data
local F = far.Flags
local Flag4BIT = bit64.bor(F.FCF_FG_4BIT, F.FCF_BG_4BIT)

----------------------------------------
local CharEnum = [[A-Za-zА-Яа-яЁё_0-9́]]
local CharsSet = "["..CharEnum.."]+"

----------------------------------------
local function DicMatch (dic, word, line, p, l)
  dic.word = word:gsub("́", "") -- Очистка слова
  return true
end -- DicMatch

local function TexMatch (dic, word, line, p, l)
  local s = p > 1 and line:sub(p - 1, p - 1)
  if not s then return end

  -- command:
  if s == '\\' then return true end

  -- group:
  if s ~= '{' then return end
  local epos = p + word:len() --+ 1
  if epos > line:len() then return end
  local e = line:sub(epos, epos)
  if not e then return end
  if e ~= '}' then return end

  return true
end -- TexMatch

----------------------------------------
Data = {
  -- Settings:
  Enabled = false,

  Path = [[%FARPROFILE%\Dictionaries\]],

  CharsSet = CharsSet,
  InnerSet = CharsSet.."$",
  StartSet = "^"..CharsSet,
  CheckSet = "/"..CharsSet.."/",

  ColorPrio = 199,

  MacroKeys = {
    CheckSpell  = "CtrlF12",
    Misspelling = "ShiftF12",
    SwitchCheck = "CtrlShiftF12",
  },

  -- Dictionaries:
  { lng = "tex",
    desc = "TeX",
    Type = "Custom",
    filename = "tex",
    masks = {'%.tex$','%.sty$','%.cls$'}, -- from LF context
    find = [[/^[A-Za-z]+$/]],
    --find = [[/^\\|^\{[a-zA-Z]+\}$/]], -- \\command or {group}
    match = TexMatch,
    color = {
      Flags = Flag4BIT,
      ForegroundColor = 0xF,
      BackgroundColor = 0xC,
    },
    Enabled = true,
    BreakOnMatch = true, -- if match is ok then break anyway end

    new = newTexDic, -- constructor for custom dictionary
  },
  { lng = "rus",
    desc = "Russian",
    Type = "Hunspell",
    filename = "ru_RU_yo",
    --find = [[/[А-Яа-яЁё]+/]],
    find = [[/[А-Яа-яЁё]{2,}/]],
    match = DicMatch,
    color = {
      Flags = Flag4BIT,
      ForegroundColor = 0xF,
      BackgroundColor = 0x4,
    },
    Enabled = true,
  },
  { lng = "eng",
    desc = "English",
    Type = "Hunspell",
    filename = "en_US",
    --find = [[/[A-Za-z]+/]],
    find = [[/[A-Za-z]{2,}/]],
    match = DicMatch,
    color = {
      Flags = Flag4BIT,
      ForegroundColor = 0xF,
      BackgroundColor = 0x5,
    },
    Enabled = true,
  },

} --
--------------------------------------------------------------------------------
